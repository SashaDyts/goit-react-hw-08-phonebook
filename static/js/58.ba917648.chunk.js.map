{"version":3,"file":"static/js/58.ba917648.chunk.js","mappings":"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","sources":["redux/contacts/constacts-selectors.js","components/Form/Form.styled.js","hooks/useForm.js","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","redux/filter/filter-selectors.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  border: solid 1px black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  /* width: 300px; */\n\n  margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nconst useForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function submitOnForm(e) {\n    e.preventDefault();\n\n    onAddContact({ name, number });\n\n    setName('');\n    setNumber('');\n  }\n  const dispatch = useDispatch();\n\n  const onAddContact = payload => {\n    dispatch(addContact(payload));\n  };\n\n  return { name, number, setName, setNumber, submitOnForm };\n};\n\nexport default useForm;\n","import React from 'react';\nimport { FormStyled, Label, Input, Button } from './Form.styled';\nimport useForm from 'hooks/useForm';\n\nfunction Form() {\n  const { name, number, setName, setNumber, submitOnForm } = useForm();\n\n  return (\n    <FormStyled onSubmit={submitOnForm}>\n      <Label>\n        Name\n        <Input\n          onChange={e => {\n            setName(e.currentTarget.value);\n          }}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Phone\n        <Input\n          onChange={e => {\n            setNumber(e.currentTarget.value);\n          }}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </FormStyled>\n  );\n}\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul``;\n\nexport const ContactListItem = styled.li``;\n\nexport const DeleteContactBtn = styled.button`\n  margin-left: 10px;\n`;\n","import React from 'react';\n\nimport {\n  ContactList,\n  ContactListItem,\n  DeleteContactBtn,\n} from './ContactsList.styled';\n// import PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  return (\n    <ContactList>\n      {contacts.map(({ id, number, name }) => {\n        return (\n          <ContactListItem key={id}>\n            {name}: {number}\n            <DeleteContactBtn\n              onClick={() => {\n                deleteContact(id);\n              }}\n            >\n              Delete\n            </DeleteContactBtn>\n          </ContactListItem>\n        );\n      })}\n    </ContactList>\n  );\n};\n\n// ContactsList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.exact({\n//       id: PropTypes.string,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   deleteContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactsList;\n","export const getFilter = state => state.filter;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { getFilteredContacts } from 'redux/contacts/constacts-selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getFilteredContacts);\n\n  if (contacts.length < 1 && filter === '') {\n    return <p>Contacts list is empty</p>;\n  }\n\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input\n        value={filter}\n        type=\"text\"\n        onChange={e => {\n          dispatch(setFilter(e.target.value));\n        }}\n      />\n    </label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   addFilterValue: PropTypes.func.isRequired,\n// };\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { removeContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/constacts-selectors';\n// import { fetchCurrentUser } from 'redux/auth/auth-operations';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport Form from 'components/Form/Form';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getFilteredContacts);\n\n  const onDeleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  useEffect(() => {\n    // dispatch(fetchCurrentUser());\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>PhoneBook</h2>\n\n      <Form />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList contacts={contacts} deleteContact={onDeleteContact} />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","contact","name","includes","FormStyled","styled","Label","Input","Button","useState","setName","number","setNumber","dispatch","useDispatch","onAddContact","payload","addContact","submitOnForm","e","preventDefault","useForm","onSubmit","onChange","currentTarget","value","type","pattern","title","required","autoComplete","ContactList","ContactListItem","DeleteContactBtn","deleteContact","map","id","onClick","getFilter","state","useSelector","length","setFilter","target","useEffect","fetchContacts","removeContact"],"sourceRoot":""}