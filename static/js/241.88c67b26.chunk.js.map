{"version":3,"file":"static/js/241.88c67b26.chunk.js","mappings":"kLAuBA,IArBmB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAClC,GAA0BC,EAAAA,EAAAA,WAAS,UAAKF,IAAxC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUC,aAfL,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EACjDJ,GAAS,SAAAQ,GAAS,yBACbA,GADa,cAEfL,EAAOI,GAFQ,GAInB,EAQuCE,aANnB,SAAAC,GACnBA,EAAEC,iBACFd,GAAS,UAAKE,IACdC,GAAS,UAAKJ,GACf,EAGF,C,iICnBYgB,EAAaC,EAAAA,GAAAA,KAAH,oaAkBVC,EAAQD,EAAAA,GAAAA,MAAH,0GAQLE,EAAQF,EAAAA,GAAAA,MAAH,wKAYLG,EAASH,EAAAA,GAAAA,OAAH,oTCxCNjB,EAAe,CAC1BO,KAAM,GACNc,MAAO,GACPC,SAAU,I,mBCoDZ,I,IAAA,EAjDA,YAAqC,IAAbrB,EAAY,EAAZA,SACtB,GAA8CsB,EAAAA,EAAAA,GAAW,CACvDvB,aAAAA,EACAC,SAAAA,IAFME,EAAR,EAAQA,MAAOE,EAAf,EAAeA,aAAcQ,EAA7B,EAA6BA,aAKrBN,EAA0BJ,EAA1BI,KAAMc,EAAoBlB,EAApBkB,MAAOC,EAAanB,EAAbmB,SAErB,OACE,UAACN,EAAD,CAAYf,SAAUY,EAAtB,WACE,UAACK,EAAD,mBAEE,SAACC,EAAD,CACEV,KAAK,OACLF,KAAK,OACLiB,SAAUnB,EACVG,MAAOD,EACPkB,UAAQ,EACRC,aAAa,YAGjB,UAACR,EAAD,oBAEE,SAACC,EAAD,CACEV,KAAK,QACLF,KAAK,QACLiB,SAAUnB,EACVG,MAAOa,EACPI,UAAQ,EACRC,aAAa,YAGjB,UAACR,EAAD,uBAEE,SAACC,EAAD,CACEV,KAAK,WACLF,KAAK,WACLiB,SAAUnB,EACVG,MAAOc,EACPG,UAAQ,EACRC,aAAa,YAIjB,SAACN,EAAD,CAAQX,KAAK,SAAb,4BAGL,E,mBCnDYkB,EAAYV,EAAAA,GAAAA,IAAH,gKAUTW,EAAeX,EAAAA,GAAAA,EAAH,uHCqBzB,EAtBqB,WACnB,IAAMY,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,IAEJ,IAAMI,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAM1B,OACE,UAACR,EAAD,YACE,SAAC,EAAD,CAAc1B,SANC,SAAAmC,GACjBP,GAASQ,EAAAA,EAAAA,IAASD,GACnB,IAMIH,IAAS,SAACL,EAAD,UAAeK,EAAMK,YAGpC,C","sources":["hooks/useNewForm.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/initial-state.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst useNewForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useNewForm;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  /* border: solid 1px black; */\n  align-items: center;\n  /* background-color: #c51bd6; */\n  border-radius: 5px;\n\n  text-align: center;\n\n  margin-top: 30px;\n  /* \n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2); */\n  /* border-radius: 0px 0px 4px 4px; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: white;\n\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n\n  outline-color: #731bd6;\n  color: #731bd6;\n  border-radius: 5px;\n  border: none;\n  padding: 3px;\n\n  margin-top: 8px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: white;\n  border: none;\n  padding: 10px;\n  background-color: #0004ff;\n  width: 50%;\n  border-radius: 5px;\n  margin-bottom: 10px;\n\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n","export const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n","import React from 'react';\nimport { FormStyled, Label, Input, Button } from './RegisterForm.styled';\nimport { initialState } from './initial-state';\n// import useForm from 'hooks/useForm';\nimport useNewForm from 'hooks/useNewForm';\n\nfunction RegisterForm({ onSubmit }) {\n  const { state, handleChange, handleSubmit } = useNewForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={email}\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          value={password}\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n\n      <Button type=\"submit\">Registration</Button>\n    </FormStyled>\n  );\n}\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  /* flex-direction: column; */\n  /* align-items: center; */\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: 18px;\n  color: #ff0000;\n\n  text-shadow: 1px 1px 1px black, 1px 1px 1px black;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { useSelector } from 'react-redux';\nimport { getError } from 'redux/auth/auth-selectors';\n\nimport { useEffect } from 'react';\nimport { removeError } from 'redux/auth/auth-slice';\n\nimport { Container, ErrorMessage } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(removeError());\n  }, [dispatch]);\n\n  const error = useSelector(getError);\n\n  const onRegister = data => {\n    dispatch(register(data));\n  };\n\n  return (\n    <Container>\n      <RegisterForm onSubmit={onRegister}></RegisterForm>\n\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["initialState","onSubmit","useState","state","setState","handleChange","target","name","value","type","checked","newValue","prevState","handleSubmit","e","preventDefault","FormStyled","styled","Label","Input","Button","email","password","useNewForm","onChange","required","autoComplete","Container","ErrorMessage","dispatch","useDispatch","useEffect","removeError","error","useSelector","getError","data","register","message"],"sourceRoot":""}